id	depth	sentence	fol	vf	vfpol	tags
1	0	two lions did not swim and come	(exists A.(two(A) & (lion(A) & - (swim(A) & come(A)))))	TWO LION NOT AND SWIM COME	[[lion,pos],[swim,neg],[come,neg]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:no;peripheral:no;center:no;adverb:no;conjunction:yes;disjunction:no
2	0	one large dog followed daniel	(exists A.((dog(A) & large(A)) & (exists B.(daniel(B) & follow(A,B)))))	EXIST AND DOG LARGE EXIST DANIEL FOLLOW	[[dog,pos],[large,pos],[daniel,pos],[follow,pos]]	sbj_quant:yes;obj_quant:no;negation:no;adjective:yes;peripheral:no;center:no;adverb:no;conjunction:no;disjunction:no
3	0	two wild tigers did not dance and come	(exists A.(two(A) & ((tiger(A) & wild(A)) & - (dance(A) & come(A)))))	TWO AND TIGER WILD NOT AND DANCE COME	[[tiger,pos],[wild,pos],[dance,neg],[come,neg]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:yes;peripheral:no;center:no;adverb:no;conjunction:yes;disjunction:no
4	0	all small cats did not dance	(forall A.((cat(A) & small(A)) -> - dance(A)))	ALL AND CAT SMALL NOT DANCE	[[cat,neg],[small,neg],[dance,neg]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:yes;peripheral:no;center:no;adverb:no;conjunction:no;disjunction:no
5	0	two small monkeys ran	(exists A.(two(A) & ((monkey(A) & small(A)) & run(A))))	TWO AND MONKEY SMALL RUN	[[monkey,pos],[small,pos],[run,pos]]	sbj_quant:yes;obj_quant:no;negation:no;adjective:yes;peripheral:no;center:no;adverb:no;conjunction:no;disjunction:no
6	0	a large fox did not lick ann	(exists A.((fox(A) & large(A)) & - (exists B.(ann(B) & lick(A,B)))))	EXIST AND FOX LARGE NOT EXIST ANN LICK	[[fox,pos],[large,pos],[ann,neg],[lick,neg]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:yes;peripheral:no;center:no;adverb:no;conjunction:no;disjunction:no
7	0	every fox did not run and dance	(forall A.(fox(A) -> - (run(A) & dance(A))))	ALL FOX NOT AND RUN DANCE	[[fox,neg],[run,neg],[dance,neg]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:no;peripheral:no;center:no;adverb:no;conjunction:yes;disjunction:no
8	0	a large horse did not rush and cry	(exists A.((horse(A) & large(A)) & - (rush(A) & cry(A))))	EXIST AND HORSE LARGE NOT AND RUSH CRY	[[horse,pos],[large,pos],[rush,neg],[cry,neg]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:yes;peripheral:no;center:no;adverb:no;conjunction:yes;disjunction:no
9	0	ann chased greg	(exists A.(ann(A) & (exists B.(greg(B) & chase(A,B)))))	EXIST ANN EXIST GREG CHASE	[[ann,pos],[greg,pos],[chase,pos]]	sbj_quant:no;obj_quant:no;negation:no;adjective:no;peripheral:no;center:no;adverb:no;conjunction:no;disjunction:no
10	0	three large horses did not swim or escape	(exists A.(three(A) & ((horse(A) & large(A)) & - (swim(A) | escape(A)))))	THREE AND HORSE LARGE NOT OR SWIM ESCAPE	[[horse,pos],[large,pos],[swim,neg],[escape,neg]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:yes;peripheral:no;center:no;adverb:no;conjunction:no;disjunction:yes
11	1	two dogs that did not run did not rush and escape	(exists A.(two(A) & ((dog(A) & - run(A)) & - (rush(A) & escape(A)))))	TWO AND DOG NOT RUN NOT AND RUSH ESCAPE	[[dog,pos],[run,neg],[rush,neg],[escape,neg]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:no;peripheral:no;center:no;adverb:no;conjunction:yes;disjunction:no
12	1	ann did not accept one bear that a dog did not kiss	(exists A.(ann(A) & - (exists B.((bear(B) & (exists C.(dog(C) & - kiss(C,B)))) & accept(A,B)))))	EXIST ANN NOT EXIST AND BEAR EXIST DOG NOT INV KISS ACCEPT	[[ann,pos],[bear,neg],[dog,neg],[kiss,pos],[accept,neg]]	sbj_quant:no;obj_quant:yes;negation:yes;adjective:no;peripheral:no;center:yes;adverb:no;conjunction:no;disjunction:no
13	1	all tigers that did not chase three birds walked or escaped	(forall A.((tiger(A) & - (exists B.(three(B) & (bird(B) & chase(B,A))))) -> (walk(A) | escape(A))))	ALL AND TIGER NOT THREE BIRD CHASE OR WALK ESCAPE	[[tiger,neg],[bird,pos],[chase,pos],[walk,pos],[escape,pos]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:no;peripheral:yes;center:no;adverb:no;conjunction:no;disjunction:yes
14	1	three dogs that cried slowly did not escape and dance	(exists A.(three(A) & ((dog(A) & (cry(A) & slowly(A))) & - (escape(A) & dance(A)))))	THREE AND DOG AND CRY SLOWLY NOT AND ESCAPE DANCE	[[dog,pos],[cry,pos],[slowly,pos],[escape,neg],[dance,neg]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:no;peripheral:no;center:no;adverb:yes;conjunction:yes;disjunction:no
15	1	john did not accept all lions that did not kick two monkeys	(exists A.(john(A) & - (forall B.((lion(B) & - (exists C.(two(C) & (monkey(C) & kick(C,B))))) -> accept(A,B)))))	EXIST JOHN NOT ALL AND LION NOT TWO MONKEY KICK ACCEPT	[[john,pos],[lion,pos],[monkey,neg],[kick,neg],[accept,neg]]	sbj_quant:no;obj_quant:yes;negation:yes;adjective:no;peripheral:yes;center:no;adverb:no;conjunction:no;disjunction:no
16	1	every cat that did not kiss all small cats danced or cried	(forall A.((cat(A) & - (forall B.((cat(B) & small(B)) -> kiss(B,A)))) -> (dance(A) | cry(A))))	ALL AND CAT NOT ALL AND CAT SMALL KISS OR DANCE CRY	[[cat,neg],[cat,neg],[small,neg],[kiss,pos],[dance,pos],[cry,pos]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:yes;peripheral:yes;center:no;adverb:no;conjunction:no;disjunction:yes
17	1	one monkey that licked every small bear did not dance or come	(exists A.((monkey(A) & (forall B.((bear(B) & small(B)) -> lick(B,A)))) & - (dance(A) | come(A))))	EXIST AND MONKEY ALL AND BEAR SMALL LICK NOT OR DANCE COME	[[monkey,pos],[bear,neg],[small,neg],[lick,pos],[dance,neg],[come,neg]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:yes;peripheral:yes;center:no;adverb:no;conjunction:no;disjunction:yes
18	1	greg did not clean three birds that did not chase all bears	(exists A.(greg(A) & - (exists B.(three(B) & ((bird(B) & - (forall C.(bear(C) -> chase(C,B)))) & clean(A,B))))))	EXIST GREG NOT THREE AND BIRD NOT ALL BEAR CHASE CLEAN	[[greg,pos],[bird,neg],[bear,neg],[chase,pos],[clean,neg]]	sbj_quant:no;obj_quant:yes;negation:yes;adjective:no;peripheral:yes;center:no;adverb:no;conjunction:no;disjunction:no
19	1	two horses that three lions followed loved daniel	(exists A.(two(A) & ((horse(A) & (exists B.(three(B) & (lion(B) & follow(B,A))))) & (exists C.(daniel(C) & love(A,C))))))	TWO AND HORSE THREE LION INV FOLLOW EXIST DANIEL LOVE	[[horse,pos],[lion,pos],[follow,pos],[daniel,pos],[love,pos]]	sbj_quant:yes;obj_quant:no;negation:no;adjective:no;peripheral:no;center:yes;adverb:no;conjunction:no;disjunction:no
20	1	all bears that did not clean two birds did not cry and swim	(forall A.((bear(A) & - (exists B.(two(B) & (bird(B) & clean(B,A))))) -> - (cry(A) & swim(A))))	ALL AND BEAR NOT TWO BIRD CLEAN NOT AND CRY SWIM	[[bear,neg],[bird,pos],[clean,pos],[cry,neg],[swim,neg]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:no;peripheral:yes;center:no;adverb:no;conjunction:yes;disjunction:no
21	2	all dogs that chased three lions that two foxes accepted cleaned tom	(forall A.((dog(A) & (exists B.(three(B) & ((lion(B) & (exists C.(two(C) & (fox(C) & accept(C,B))))) & chase(B,A))))) -> (exists D.(tom(D) & clean(A,D)))))	ALL AND DOG THREE AND LION TWO FOX INV ACCEPT CHASE EXIST TOM CLEAN	[[dog,neg],[lion,neg],[fox,neg],[accept,neg],[chase,neg],[tom,pos],[clean,pos]]	sbj_quant:yes;obj_quant:no;negation:no;adjective:no;peripheral:yes;center:yes;adverb:no;conjunction:no;disjunction:no
22	2	two horses that all birds that three dogs accepted kissed swam or ran	(exists A.(two(A) & ((horse(A) & (forall B.((bird(B) & (exists C.(three(C) & (dog(C) & accept(C,B))))) -> kiss(B,A)))) & (swim(A) | run(A)))))	TWO AND HORSE ALL AND BIRD THREE DOG INV ACCEPT INV KISS OR SWIM RUN	[[horse,pos],[bird,neg],[dog,neg],[accept,neg],[kiss,pos],[swim,pos],[run,pos]]	sbj_quant:yes;obj_quant:no;negation:no;adjective:no;peripheral:no;center:yes;adverb:no;conjunction:no;disjunction:yes
23	2	all dogs that did not follow three bears that rushed slowly cried or swam	(forall A.((dog(A) & - (exists B.(three(B) & ((bear(B) & (rush(B) & slowly(B))) & follow(B,A))))) -> (cry(A) | swim(A))))	ALL AND DOG NOT THREE AND BEAR AND RUSH SLOWLY FOLLOW OR CRY SWIM	[[dog,neg],[bear,pos],[rush,pos],[slowly,pos],[follow,pos],[cry,pos],[swim,pos]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:no;peripheral:yes;center:no;adverb:yes;conjunction:no;disjunction:yes
24	2	daniel did not chase three cats that did not lick two tigers that did not accept all foxes	(exists A.(daniel(A) & - (exists B.(three(B) & ((cat(B) & - (exists C.(two(C) & ((tiger(C) & - (forall D.(fox(D) -> accept(D,C)))) & lick(C,B))))) & chase(A,B))))))	EXIST DANIEL NOT THREE AND CAT NOT TWO AND TIGER NOT ALL FOX ACCEPT LICK CHASE	[[daniel,pos],[cat,neg],[tiger,pos],[fox,pos],[accept,neg],[lick,pos],[chase,neg]]	sbj_quant:no;obj_quant:yes;negation:yes;adjective:no;peripheral:yes;center:no;adverb:no;conjunction:no;disjunction:no
25	2	every horse that did not lick a bear that did not like two small foxes chased ann	(forall A.((horse(A) & - (exists B.((bear(B) & - (exists C.(two(C) & ((fox(C) & small(C)) & like(C,B))))) & lick(B,A)))) -> (exists D.(ann(D) & chase(A,D)))))	ALL AND HORSE NOT EXIST AND BEAR NOT TWO AND FOX SMALL LIKE LICK EXIST ANN CHASE	[[horse,neg],[bear,pos],[fox,neg],[small,neg],[like,neg],[lick,pos],[ann,pos],[chase,pos]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:yes;peripheral:yes;center:no;adverb:no;conjunction:no;disjunction:no
26	2	every monkey that liked three rabbits that cried lazily escaped and moved	(forall A.((monkey(A) & (exists B.(three(B) & ((rabbit(B) & (cry(B) & lazily(B))) & like(B,A))))) -> (escape(A) & move(A))))	ALL AND MONKEY THREE AND RABBIT AND CRY LAZILY LIKE AND ESCAPE MOVE	[[monkey,neg],[rabbit,neg],[cry,neg],[lazily,neg],[like,neg],[escape,pos],[move,pos]]	sbj_quant:yes;obj_quant:no;negation:no;adjective:no;peripheral:yes;center:no;adverb:yes;conjunction:yes;disjunction:no
27	2	a cat that every bird that did not swim lazily accepted did not dance or move	(exists A.((cat(A) & (forall B.((bird(B) & - (swim(B) & lazily(B))) -> accept(B,A)))) & - (dance(A) | move(A))))	EXIST AND CAT ALL AND BIRD NOT AND SWIM LAZILY INV ACCEPT NOT OR DANCE MOVE	[[cat,pos],[bird,neg],[swim,pos],[lazily,pos],[accept,pos],[dance,neg],[move,neg]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:no;peripheral:no;center:yes;adverb:yes;conjunction:no;disjunction:yes
28	2	two birds that did not accept all dogs that did not kiss three tigers slept slowly	(exists A.(two(A) & ((bird(A) & - (forall B.((dog(B) & - (exists C.(three(C) & (tiger(C) & kiss(C,B))))) -> accept(B,A)))) & (sleep(A) & slowly(A)))))	TWO AND BIRD NOT ALL AND DOG NOT THREE TIGER KISS ACCEPT AND SLEEP SLOWLY	[[bird,pos],[dog,pos],[tiger,neg],[kiss,neg],[accept,neg],[sleep,pos],[slowly,pos]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:no;peripheral:yes;center:no;adverb:yes;conjunction:no;disjunction:no
29	2	a horse that one dog that every polite bear kissed kicked escaped	(exists A.((horse(A) & (exists B.((dog(B) & (forall C.((bear(C) & polite(C)) -> kiss(C,B)))) & kick(B,A)))) & escape(A)))	EXIST AND HORSE EXIST AND DOG ALL AND BEAR POLITE INV KISS INV KICK ESCAPE	[[horse,pos],[dog,pos],[bear,neg],[polite,neg],[kiss,pos],[kick,pos],[escape,pos]]	sbj_quant:yes;obj_quant:no;negation:no;adjective:yes;peripheral:no;center:yes;adverb:no;conjunction:no;disjunction:no
30	2	two horses that three cats that all tigers did not kick did not kiss did not follow tom	(exists A.(two(A) & ((horse(A) & (exists B.(three(B) & ((cat(B) & (forall C.(tiger(C) -> - kick(C,B)))) & - kiss(B,A))))) & - (exists D.(tom(D) & follow(A,D))))))	TWO AND HORSE THREE AND CAT ALL TIGER NOT INV KICK NOT INV KISS NOT EXIST TOM FOLLOW	[[horse,pos],[cat,pos],[tiger,neg],[kick,neg],[kiss,neg],[tom,neg],[follow,neg]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:no;peripheral:no;center:yes;adverb:no;conjunction:no;disjunction:no
31	3	one bird that a bear that every rabbit that kicked every monkey did not love did not touch swam	(exists A.((bird(A) & (exists B.((bear(B) & (forall C.((rabbit(C) & (forall D.(monkey(D) -> kick(D,C)))) -> - love(C,B)))) & - touch(B,A)))) & swim(A)))	EXIST AND BIRD EXIST AND BEAR ALL AND RABBIT ALL MONKEY KICK NOT INV LOVE NOT INV TOUCH SWIM	[[bird,pos],[bear,pos],[rabbit,neg],[monkey,pos],[kick,neg],[love,neg],[touch,neg],[swim,pos]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:no;peripheral:yes;center:yes;adverb:no;conjunction:no;disjunction:no
32	3	greg did not follow all rabbits that kicked three foxes that did not kick all lions that did not run	(exists A.(greg(A) & - (forall B.((rabbit(B) & (exists C.(three(C) & ((fox(C) & - (forall D.((lion(D) & - run(D)) -> kick(D,C)))) & kick(C,B))))) -> follow(A,B)))))	EXIST GREG NOT ALL AND RABBIT THREE AND FOX NOT ALL AND LION NOT RUN KICK KICK FOLLOW	[[greg,pos],[rabbit,pos],[fox,pos],[lion,pos],[run,neg],[kick,neg],[kick,pos],[follow,neg]]	sbj_quant:no;obj_quant:yes;negation:yes;adjective:no;peripheral:yes;center:no;adverb:no;conjunction:no;disjunction:no
33	3	three foxes that three horses that did not like all birds that all small lions accepted did not chase escaped and slept	(exists A.(three(A) & ((fox(A) & (exists B.(three(B) & ((horse(B) & - (forall C.((bird(C) & (forall D.((lion(D) & small(D)) -> accept(D,C)))) -> like(C,B)))) & - chase(B,A))))) & (escape(A) & sleep(A)))))	THREE AND FOX THREE AND HORSE NOT ALL AND BIRD ALL AND LION SMALL INV ACCEPT LIKE NOT INV CHASE AND ESCAPE SLEEP	[[fox,pos],[horse,pos],[bird,pos],[lion,neg],[small,neg],[accept,pos],[like,neg],[chase,neg],[escape,pos],[sleep,pos]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:yes;peripheral:yes;center:yes;adverb:no;conjunction:yes;disjunction:no
34	3	ann did not touch a fox that did not love a bird that did not chase three cats that a small lion did not accept	(exists A.(ann(A) & - (exists B.((fox(B) & - (exists C.((bird(C) & - (exists D.(three(D) & ((cat(D) & (exists E.((lion(E) & small(E)) & - accept(E,D)))) & chase(D,C))))) & love(C,B)))) & touch(A,B)))))	EXIST ANN NOT EXIST AND FOX NOT EXIST AND BIRD NOT THREE AND CAT EXIST AND LION SMALL NOT INV ACCEPT CHASE LOVE TOUCH	[[ann,pos],[fox,neg],[bird,pos],[cat,neg],[lion,neg],[small,neg],[accept,pos],[chase,neg],[love,pos],[touch,neg]]	sbj_quant:no;obj_quant:yes;negation:yes;adjective:yes;peripheral:yes;center:yes;adverb:no;conjunction:no;disjunction:no
35	3	every rabbit that did not lick two birds that one bird that did not clean a wild dog did not chase did not come or walk	(forall A.((rabbit(A) & - (exists B.(two(B) & ((bird(B) & (exists C.((bird(C) & - (exists D.((dog(D) & wild(D)) & clean(D,C)))) & - chase(C,B)))) & lick(B,A))))) -> - (come(A) | walk(A))))	ALL AND RABBIT NOT TWO AND BIRD EXIST AND BIRD NOT EXIST AND DOG WILD CLEAN NOT INV CHASE LICK NOT OR COME WALK	[[rabbit,neg],[bird,pos],[bird,pos],[dog,neg],[wild,neg],[clean,neg],[chase,neg],[lick,pos],[come,neg],[walk,neg]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:yes;peripheral:yes;center:yes;adverb:no;conjunction:no;disjunction:yes
36	3	one dog that accepted one monkey that one cat that did not cry quickly touched did not lick elliot	(exists A.((dog(A) & (exists B.((monkey(B) & (exists C.((cat(C) & - (cry(C) & quickly(C))) & touch(C,B)))) & accept(B,A)))) & - (exists D.(elliot(D) & lick(A,D)))))	EXIST AND DOG EXIST AND MONKEY EXIST AND CAT NOT AND CRY QUICKLY INV TOUCH ACCEPT NOT EXIST ELLIOT LICK	[[dog,pos],[monkey,pos],[cat,pos],[cry,neg],[quickly,neg],[touch,pos],[accept,pos],[elliot,neg],[lick,neg]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:no;peripheral:yes;center:yes;adverb:yes;conjunction:no;disjunction:no
37	3	elliot kicked every bear that a fox that followed every horse that did not lick a tiger touched	(exists A.(elliot(A) & (forall B.((bear(B) & (exists C.((fox(C) & (forall D.((horse(D) & - (exists E.(tiger(E) & lick(E,D)))) -> follow(D,C)))) & touch(C,B)))) -> kick(A,B)))))	EXIST ELLIOT ALL AND BEAR EXIST AND FOX ALL AND HORSE NOT EXIST TIGER LICK FOLLOW INV TOUCH KICK	[[elliot,pos],[bear,neg],[fox,neg],[horse,pos],[tiger,neg],[lick,neg],[follow,neg],[touch,neg],[kick,pos]]	sbj_quant:no;obj_quant:yes;negation:yes;adjective:no;peripheral:yes;center:yes;adverb:no;conjunction:no;disjunction:no
38	3	greg did not like all cats that three monkeys that kissed three horses that did not lick all foxes did not kiss	(exists A.(greg(A) & - (forall B.((cat(B) & (exists C.(three(C) & ((monkey(C) & (exists D.(three(D) & ((horse(D) & - (forall E.(fox(E) -> lick(E,D)))) & kiss(D,C))))) & - kiss(C,B))))) -> like(A,B)))))	EXIST GREG NOT ALL AND CAT THREE AND MONKEY THREE AND HORSE NOT ALL FOX LICK KISS NOT INV KISS LIKE	[[greg,pos],[cat,pos],[monkey,pos],[horse,pos],[fox,pos],[lick,neg],[kiss,pos],[kiss,neg],[like,neg]]	sbj_quant:no;obj_quant:yes;negation:yes;adjective:no;peripheral:yes;center:yes;adverb:no;conjunction:no;disjunction:no
39	3	two foxes that two monkeys that one lion that three small rabbits cleaned kissed did not like did not love greg	(exists A.(two(A) & ((fox(A) & (exists B.(two(B) & ((monkey(B) & (exists C.((lion(C) & (exists D.(three(D) & ((rabbit(D) & small(D)) & clean(D,C))))) & kiss(C,B)))) & - like(B,A))))) & - (exists E.(greg(E) & love(A,E))))))	TWO AND FOX TWO AND MONKEY EXIST AND LION THREE AND RABBIT SMALL INV CLEAN INV KISS NOT INV LIKE NOT EXIST GREG LOVE	[[fox,pos],[monkey,pos],[lion,pos],[rabbit,pos],[small,pos],[clean,pos],[kiss,pos],[like,neg],[greg,neg],[love,neg]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:yes;peripheral:no;center:yes;adverb:no;conjunction:no;disjunction:no
40	3	one horse that every bird that licked every monkey that a wild rabbit followed liked did not cry quickly	(exists A.((horse(A) & (forall B.((bird(B) & (forall C.((monkey(C) & (exists D.((rabbit(D) & wild(D)) & follow(D,C)))) -> lick(C,B)))) -> like(B,A)))) & - (cry(A) & quickly(A))))	EXIST AND HORSE ALL AND BIRD ALL AND MONKEY EXIST AND RABBIT WILD INV FOLLOW LICK INV LIKE NOT AND CRY QUICKLY	[[horse,pos],[bird,neg],[monkey,pos],[rabbit,pos],[wild,pos],[follow,pos],[lick,neg],[like,pos],[cry,neg],[quickly,neg]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:yes;peripheral:yes;center:yes;adverb:yes;conjunction:no;disjunction:no
41	4	every fox that accepted a bear that one dog that one monkey that a cat did not clean did not touch did not kick did not come	(forall A.((fox(A) & (exists B.((bear(B) & (exists C.((dog(C) & (exists D.((monkey(D) & (exists E.(cat(E) & - clean(E,D)))) & - touch(D,C)))) & - kick(C,B)))) & accept(B,A)))) -> - come(A)))	ALL AND FOX EXIST AND BEAR EXIST AND DOG EXIST AND MONKEY EXIST CAT NOT INV CLEAN NOT INV TOUCH NOT INV KICK ACCEPT NOT COME	[[fox,neg],[bear,neg],[dog,neg],[monkey,neg],[cat,neg],[clean,pos],[touch,pos],[kick,pos],[accept,neg],[come,neg]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:no;peripheral:yes;center:yes;adverb:no;conjunction:no;disjunction:no
42	4	john did not like three birds that did not kiss all lions that did not lick all rabbits that did not kick two bears that liked all crazy tigers	(exists A.(john(A) & - (exists B.(three(B) & ((bird(B) & - (forall C.((lion(C) & - (forall D.((rabbit(D) & - (exists E.(two(E) & ((bear(E) & (forall F.((tiger(F) & crazy(F)) -> like(F,E)))) & kick(E,D))))) -> lick(D,C)))) -> kiss(C,B)))) & like(A,B))))))	EXIST JOHN NOT THREE AND BIRD NOT ALL AND LION NOT ALL AND RABBIT NOT TWO AND BEAR ALL AND TIGER CRAZY LIKE KICK LICK KISS LIKE	[[john,pos],[bird,neg],[lion,neg],[rabbit,neg],[bear,pos],[tiger,neg],[crazy,neg],[like,pos],[kick,pos],[lick,pos],[kiss,pos],[like,neg]]	sbj_quant:no;obj_quant:yes;negation:yes;adjective:yes;peripheral:yes;center:no;adverb:no;conjunction:no;disjunction:no
43	4	one horse that a bird that one fox that did not clean every rabbit that every large tiger did not follow did not love followed did not escape	(exists A.((horse(A) & (exists B.((bird(B) & (exists C.((fox(C) & - (forall D.((rabbit(D) & (forall E.((tiger(E) & large(E)) -> - follow(E,D)))) -> clean(D,C)))) & - love(C,B)))) & follow(B,A)))) & - escape(A)))	EXIST AND HORSE EXIST AND BIRD EXIST AND FOX NOT ALL AND RABBIT ALL AND TIGER LARGE NOT INV FOLLOW CLEAN NOT INV LOVE INV FOLLOW NOT ESCAPE	[[horse,pos],[bird,pos],[fox,pos],[rabbit,pos],[tiger,neg],[large,neg],[follow,neg],[clean,neg],[love,neg],[follow,pos],[escape,neg]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:yes;peripheral:yes;center:yes;adverb:no;conjunction:no;disjunction:no
44	4	bob accepted a fox that one rabbit that kicked every tiger that did not clean one cat that a horse licked followed	(exists A.(bob(A) & (exists B.((fox(B) & (exists C.((rabbit(C) & (forall D.((tiger(D) & - (exists E.((cat(E) & (exists F.(horse(F) & lick(F,E)))) & clean(E,D)))) -> kick(D,C)))) & follow(C,B)))) & accept(A,B)))))	EXIST BOB EXIST AND FOX EXIST AND RABBIT ALL AND TIGER NOT EXIST AND CAT EXIST HORSE INV LICK CLEAN KICK INV FOLLOW ACCEPT	[[bob,pos],[fox,pos],[rabbit,pos],[tiger,neg],[cat,pos],[horse,pos],[lick,pos],[clean,pos],[kick,pos],[follow,pos],[accept,pos]]	sbj_quant:no;obj_quant:yes;negation:yes;adjective:no;peripheral:yes;center:yes;adverb:no;conjunction:no;disjunction:no
45	4	one lion that chased every monkey that kicked every fox that every rabbit that every crazy bird touched did not clean did not swim	(exists A.((lion(A) & (forall B.((monkey(B) & (forall C.((fox(C) & (forall D.((rabbit(D) & (forall E.((bird(E) & crazy(E)) -> touch(E,D)))) -> - clean(D,C)))) -> kick(C,B)))) -> chase(B,A)))) & - swim(A)))	EXIST AND LION ALL AND MONKEY ALL AND FOX ALL AND RABBIT ALL AND BIRD CRAZY INV TOUCH NOT INV CLEAN KICK CHASE NOT SWIM	[[lion,pos],[monkey,neg],[fox,pos],[rabbit,neg],[bird,pos],[crazy,pos],[touch,neg],[clean,neg],[kick,neg],[chase,pos],[swim,neg]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:yes;peripheral:yes;center:yes;adverb:no;conjunction:no;disjunction:no
46	4	two lions that did not kiss a bear that accepted all dogs that did not like three cats that cried lazily did not run seriously	(exists A.(two(A) & ((lion(A) & - (exists B.((bear(B) & (forall C.((dog(C) & - (exists D.(three(D) & ((cat(D) & (cry(D) & lazily(D))) & like(D,C))))) -> accept(C,B)))) & kiss(B,A)))) & - (run(A) & seriously(A)))))	TWO AND LION NOT EXIST AND BEAR ALL AND DOG NOT THREE AND CAT AND CRY LAZILY LIKE ACCEPT KISS NOT AND RUN SERIOUSLY	[[lion,pos],[bear,neg],[dog,pos],[cat,neg],[cry,neg],[lazily,neg],[like,neg],[accept,neg],[kiss,neg],[run,neg],[seriously,neg]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:no;peripheral:yes;center:no;adverb:yes;conjunction:no;disjunction:no
47	4	a bird that liked every tiger that one fox that a horse that a bear did not lick did not follow did not kiss did not escape	(exists A.((bird(A) & (forall B.((tiger(B) & (exists C.((fox(C) & (exists D.((horse(D) & (exists E.(bear(E) & - lick(E,D)))) & - follow(D,C)))) & - kiss(C,B)))) -> like(B,A)))) & - escape(A)))	EXIST AND BIRD ALL AND TIGER EXIST AND FOX EXIST AND HORSE EXIST BEAR NOT INV LICK NOT INV FOLLOW NOT INV KISS LIKE NOT ESCAPE	[[bird,pos],[tiger,neg],[fox,neg],[horse,neg],[bear,neg],[lick,pos],[follow,pos],[kiss,pos],[like,pos],[escape,neg]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:no;peripheral:yes;center:yes;adverb:no;conjunction:no;disjunction:no
48	4	elliot accepted one monkey that every fox that touched one lion that did not accept one tiger that every dog loved liked	(exists A.(elliot(A) & (exists B.((monkey(B) & (forall C.((fox(C) & (exists D.((lion(D) & - (exists E.((tiger(E) & (forall F.(dog(F) -> love(F,E)))) & accept(E,D)))) & touch(D,C)))) -> like(C,B)))) & accept(A,B)))))	EXIST ELLIOT EXIST AND MONKEY ALL AND FOX EXIST AND LION NOT EXIST AND TIGER ALL DOG INV LOVE ACCEPT TOUCH INV LIKE ACCEPT	[[elliot,pos],[monkey,pos],[fox,neg],[lion,neg],[tiger,pos],[dog,neg],[love,pos],[accept,pos],[touch,neg],[like,pos],[accept,pos]]	sbj_quant:no;obj_quant:yes;negation:yes;adjective:no;peripheral:yes;center:yes;adverb:no;conjunction:no;disjunction:no
49	4	a monkey that two bears that three monkeys that all rabbits that liked two polite lions accepted touched kicked did not rush and come	(exists A.((monkey(A) & (exists B.(two(B) & ((bear(B) & (exists C.(three(C) & ((monkey(C) & (forall D.((rabbit(D) & (exists E.(two(E) & ((lion(E) & polite(E)) & like(E,D))))) -> accept(D,C)))) & touch(C,B))))) & kick(B,A))))) & - (rush(A) & come(A))))	EXIST AND MONKEY TWO AND BEAR THREE AND MONKEY ALL AND RABBIT TWO AND LION POLITE LIKE INV ACCEPT INV TOUCH INV KICK NOT AND RUSH COME	[[monkey,pos],[bear,pos],[monkey,pos],[rabbit,neg],[lion,neg],[polite,neg],[like,neg],[accept,pos],[touch,pos],[kick,pos],[rush,neg],[come,neg]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:yes;peripheral:yes;center:yes;adverb:no;conjunction:yes;disjunction:no
50	4	every monkey that a lion that a cat that every dog that one small rabbit followed accepted liked touched kissed tom	(forall A.((monkey(A) & (exists B.((lion(B) & (exists C.((cat(C) & (forall D.((dog(D) & (exists E.((rabbit(E) & small(E)) & follow(E,D)))) -> accept(D,C)))) & like(C,B)))) & touch(B,A)))) -> (exists F.(tom(F) & kiss(A,F)))))	ALL AND MONKEY EXIST AND LION EXIST AND CAT ALL AND DOG EXIST AND RABBIT SMALL INV FOLLOW INV ACCEPT INV LIKE INV TOUCH EXIST TOM KISS	[[monkey,neg],[lion,neg],[cat,neg],[dog,pos],[rabbit,pos],[small,pos],[follow,pos],[accept,neg],[like,neg],[touch,neg],[tom,pos],[kiss,pos]]	sbj_quant:yes;obj_quant:no;negation:no;adjective:yes;peripheral:no;center:yes;adverb:no;conjunction:no;disjunction:no
