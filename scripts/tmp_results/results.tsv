id	depth	sentence	fol	folpol	vf	vfpol	tags	drs
1	0	two lions did not swim and come	exists x1.(two(x1) & lion(x1) & -(swim(x1) & come(x1)))	[('two', 1), ('lion', 1), ('swim', 0), ('come', 0)]	TWO LION NOT AND SWIM COME	[[lion,pos],[swim,neg],[come,neg]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:no;peripheral:no;center:no;adverb:no;conjunction:yes;disjunction:no	b1 REF x1 [SEP] b1 two x1 [SEP] b1 lion x1 [SEP] b1 NOT b2 [SEP] b2 swim x1 [SEP] b2 come x1
2	0	one large dog followed daniel	exists x1.(dog(x1) & large(x1) & exists x2.(daniel(x2) & follow(x1,x2)))	[('dog', 1), ('large', 1), ('daniel', 1), ('follow', 1)]	EXIST AND DOG LARGE EXIST DANIEL FOLLOW	[[dog,pos],[large,pos],[daniel,pos],[follow,pos]]	sbj_quant:yes;obj_quant:no;negation:no;adjective:yes;peripheral:no;center:no;adverb:no;conjunction:no;disjunction:no	b1 REF x1 [SEP] b1 REF x2 [SEP] b1 dog x1 [SEP] b1 large x1 [SEP] b1 daniel x2 [SEP] b1 follow x1 x2
3	0	two wild tigers did not dance and come	exists x1.(two(x1) & tiger(x1) & wild(x1) & -(dance(x1) & come(x1)))	[('two', 1), ('tiger', 1), ('wild', 1), ('dance', 0), ('come', 0)]	TWO AND TIGER WILD NOT AND DANCE COME	[[tiger,pos],[wild,pos],[dance,neg],[come,neg]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:yes;peripheral:no;center:no;adverb:no;conjunction:yes;disjunction:no	b1 REF x1 [SEP] b1 two x1 [SEP] b1 tiger x1 [SEP] b1 wild x1 [SEP] b1 NOT b2 [SEP] b2 dance x1 [SEP] b2 come x1
4	0	all small cats did not dance	all x1.((cat(x1) & small(x1)) -> -dance(x1))	[('cat', 0), ('small', 0), ('dance', 0)]	ALL AND CAT SMALL NOT DANCE	[[cat,neg],[small,neg],[dance,neg]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:yes;peripheral:no;center:no;adverb:no;conjunction:no;disjunction:no	b1 IMP b2 b3 [SEP] b2 REF x1 [SEP] b2 cat x1 [SEP] b2 small x1 [SEP] b3 NOT b4 [SEP] b4 dance x1
5	0	two small monkeys ran	exists x1.(two(x1) & monkey(x1) & small(x1) & run(x1))	[('two', 1), ('monkey', 1), ('small', 1), ('run', 1)]	TWO AND MONKEY SMALL RUN	[[monkey,pos],[small,pos],[run,pos]]	sbj_quant:yes;obj_quant:no;negation:no;adjective:yes;peripheral:no;center:no;adverb:no;conjunction:no;disjunction:no	b1 REF x1 [SEP] b1 two x1 [SEP] b1 monkey x1 [SEP] b1 small x1 [SEP] b1 run x1
6	0	a large fox did not lick ann	exists x1.(fox(x1) & large(x1) & -exists x2.(ann(x2) & lick(x1,x2)))	[('fox', 1), ('large', 1), ('ann', 0), ('lick', 0)]	EXIST AND FOX LARGE NOT EXIST ANN LICK	[[fox,pos],[large,pos],[ann,neg],[lick,neg]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:yes;peripheral:no;center:no;adverb:no;conjunction:no;disjunction:no	b1 REF x1 [SEP] b1 fox x1 [SEP] b1 large x1 [SEP] b1 NOT b2 [SEP] b2 REF x2 [SEP] b2 ann x2 [SEP] b2 lick x1 x2
7	0	every fox did not run and dance	all x1.(fox(x1) -> -(run(x1) & dance(x1)))	[('fox', 0), ('run', 0), ('dance', 0)]	ALL FOX NOT AND RUN DANCE	[[fox,neg],[run,neg],[dance,neg]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:no;peripheral:no;center:no;adverb:no;conjunction:yes;disjunction:no	b1 IMP b2 b3 [SEP] b2 REF x1 [SEP] b2 fox x1 [SEP] b3 NOT b4 [SEP] b4 run x1 [SEP] b4 dance x1
8	0	a large horse did not rush and cry	exists x1.(horse(x1) & large(x1) & -(rush(x1) & cry(x1)))	[('horse', 1), ('large', 1), ('rush', 0), ('cry', 0)]	EXIST AND HORSE LARGE NOT AND RUSH CRY	[[horse,pos],[large,pos],[rush,neg],[cry,neg]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:yes;peripheral:no;center:no;adverb:no;conjunction:yes;disjunction:no	b1 REF x1 [SEP] b1 horse x1 [SEP] b1 large x1 [SEP] b1 NOT b2 [SEP] b2 rush x1 [SEP] b2 cry x1
9	0	ann chased greg	exists x1.(ann(x1) & exists x2.(greg(x2) & chase(x1,x2)))	[('ann', 1), ('greg', 1), ('chase', 1)]	EXIST ANN EXIST GREG CHASE	[[ann,pos],[greg,pos],[chase,pos]]	sbj_quant:no;obj_quant:no;negation:no;adjective:no;peripheral:no;center:no;adverb:no;conjunction:no;disjunction:no	b1 REF x1 [SEP] b1 REF x2 [SEP] b1 ann x1 [SEP] b1 greg x2 [SEP] b1 chase x1 x2
10	0	three large horses did not swim or escape	exists x1.(three(x1) & horse(x1) & large(x1) & -(swim(x1) | escape(x1)))	[('three', 1), ('horse', 1), ('large', 1), ('swim', 0), ('escape', 0)]	THREE AND HORSE LARGE NOT OR SWIM ESCAPE	[[horse,pos],[large,pos],[swim,neg],[escape,neg]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:yes;peripheral:no;center:no;adverb:no;conjunction:no;disjunction:yes	b1 REF x1 [SEP] b1 three x1 [SEP] b1 horse x1 [SEP] b1 large x1 [SEP] b1 NOT b2 [SEP] b2 DIS b3 b4 [SEP] b3 swim x1 [SEP] b4 escape x1
11	1	two dogs that did not run did not rush and escape	exists x1.(two(x1) & dog(x1) & -run(x1) & -(rush(x1) & escape(x1)))	[('two', 1), ('dog', 1), ('run', 0), ('rush', 0), ('escape', 0)]	TWO AND DOG NOT RUN NOT AND RUSH ESCAPE	[[dog,pos],[run,neg],[rush,neg],[escape,neg]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:no;peripheral:no;center:no;adverb:no;conjunction:yes;disjunction:no	b1 REF x1 [SEP] b1 two x1 [SEP] b1 dog x1 [SEP] b1 NOT b2 [SEP] b2 run x1 [SEP] b1 NOT b2 [SEP] b2 rush x1 [SEP] b2 escape x1
12	1	ann did not accept one bear that a dog did not kiss	exists x1.(ann(x1) & -exists x2.(bear(x2) & exists x3.(dog(x3) & -kiss(x3,x2)) & accept(x1,x2)))	[('ann', 1), ('bear', 0), ('dog', 0), ('kiss', 1), ('accept', 0)]	EXIST ANN NOT EXIST AND BEAR EXIST DOG NOT INV KISS ACCEPT	[[ann,pos],[bear,neg],[dog,neg],[kiss,pos],[accept,neg]]	sbj_quant:no;obj_quant:yes;negation:yes;adjective:no;peripheral:no;center:yes;adverb:no;conjunction:no;disjunction:no	b1 REF x1 [SEP] b1 ann x1 [SEP] b1 NOT b2 [SEP] b2 REF x2 [SEP] b2 REF x3 [SEP] b2 bear x2 [SEP] b2 dog x3 [SEP] b2 NOT b3 [SEP] b3 kiss x3 x2 [SEP] b2 accept x1 x2
13	1	all tigers that did not chase three birds walked or escaped	all x1.((tiger(x1) & -exists x2.(three(x2) & bird(x2) & chase(x2,x1))) -> (walk(x1) | escape(x1)))	[('tiger', 0), ('three', 1), ('bird', 1), ('chase', 1), ('walk', 1), ('escape', 1)]	ALL AND TIGER NOT THREE BIRD CHASE OR WALK ESCAPE	[[tiger,neg],[bird,pos],[chase,pos],[walk,pos],[escape,pos]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:no;peripheral:yes;center:no;adverb:no;conjunction:no;disjunction:yes	b1 IMP b2 b3 [SEP] b2 REF x1 [SEP] b2 tiger x1 [SEP] b2 NOT b3 [SEP] b3 REF x2 [SEP] b3 three x2 [SEP] b3 bird x2 [SEP] b3 chase x2 x1 [SEP] b3 DIS b4 b5 [SEP] b4 walk x1 [SEP] b5 escape x1
14	1	three dogs that cried slowly did not escape and dance	exists x1.(three(x1) & dog(x1) & cry(x1) & slowly(x1) & -(escape(x1) & dance(x1)))	[('three', 1), ('dog', 1), ('cry', 1), ('slowly', 1), ('escape', 0), ('dance', 0)]	THREE AND DOG AND CRY SLOWLY NOT AND ESCAPE DANCE	[[dog,pos],[cry,pos],[slowly,pos],[escape,neg],[dance,neg]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:no;peripheral:no;center:no;adverb:yes;conjunction:yes;disjunction:no	b1 REF x1 [SEP] b1 three x1 [SEP] b1 dog x1 [SEP] b1 cry x1 [SEP] b1 slowly x1 [SEP] b1 NOT b2 [SEP] b2 escape x1 [SEP] b2 dance x1
15	1	john did not accept all lions that did not kick two monkeys	exists x1.(john(x1) & -all x2.((lion(x2) & -exists x3.(two(x3) & monkey(x3) & kick(x3,x2))) -> accept(x1,x2)))	[('john', 1), ('lion', 1), ('two', 0), ('monkey', 0), ('kick', 0), ('accept', 0)]	EXIST JOHN NOT ALL AND LION NOT TWO MONKEY KICK ACCEPT	[[john,pos],[lion,pos],[monkey,neg],[kick,neg],[accept,neg]]	sbj_quant:no;obj_quant:yes;negation:yes;adjective:no;peripheral:yes;center:no;adverb:no;conjunction:no;disjunction:no	b1 REF x1 [SEP] b1 john x1 [SEP] b1 NOT b2 [SEP] b2 IMP b3 b4 [SEP] b3 REF x2 [SEP] b3 lion x2 [SEP] b3 NOT b4 [SEP] b4 REF x3 [SEP] b4 two x3 [SEP] b4 monkey x3 [SEP] b4 kick x3 x2 [SEP] b4 accept x1 x2
16	1	every cat that did not kiss all small cats danced or cried	all x1.((cat(x1) & -all x2.((cat(x2) & small(x2)) -> kiss(x2,x1))) -> (dance(x1) | cry(x1)))	[('cat', 0), ('cat', 0), ('small', 0), ('kiss', 1), ('dance', 1), ('cry', 1)]	ALL AND CAT NOT ALL AND CAT SMALL KISS OR DANCE CRY	[[cat,neg],[cat,neg],[small,neg],[kiss,pos],[dance,pos],[cry,pos]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:yes;peripheral:yes;center:no;adverb:no;conjunction:no;disjunction:yes	b1 IMP b2 b3 [SEP] b2 REF x1 [SEP] b2 cat x1 [SEP] b2 NOT b3 [SEP] b3 IMP b4 b5 [SEP] b4 REF x2 [SEP] b4 cat x2 [SEP] b4 small x2 [SEP] b5 kiss x2 x1 [SEP] b3 DIS b4 b5 [SEP] b4 dance x1 [SEP] b5 cry x1
17	1	one monkey that licked every small bear did not dance or come	exists x1.(monkey(x1) & all x2.((bear(x2) & small(x2)) -> lick(x2,x1)) & -(dance(x1) | come(x1)))	[('monkey', 1), ('bear', 0), ('small', 0), ('lick', 1), ('dance', 0), ('come', 0)]	EXIST AND MONKEY ALL AND BEAR SMALL LICK NOT OR DANCE COME	[[monkey,pos],[bear,neg],[small,neg],[lick,pos],[dance,neg],[come,neg]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:yes;peripheral:yes;center:no;adverb:no;conjunction:no;disjunction:yes	b1 REF x1 [SEP] b1 monkey x1 [SEP] b1 IMP b2 b3 [SEP] b2 REF x2 [SEP] b2 bear x2 [SEP] b2 small x2 [SEP] b3 lick x2 x1 [SEP] b1 NOT b2 [SEP] b2 DIS b3 b4 [SEP] b3 dance x1 [SEP] b4 come x1
18	1	greg did not clean three birds that did not chase all bears	exists x1.(greg(x1) & -exists x2.(three(x2) & bird(x2) & -all x3.(bear(x3) -> chase(x3,x2)) & clean(x1,x2)))	[('greg', 1), ('three', 0), ('bird', 0), ('bear', 0), ('chase', 1), ('clean', 0)]	EXIST GREG NOT THREE AND BIRD NOT ALL BEAR CHASE CLEAN	[[greg,pos],[bird,neg],[bear,neg],[chase,pos],[clean,neg]]	sbj_quant:no;obj_quant:yes;negation:yes;adjective:no;peripheral:yes;center:no;adverb:no;conjunction:no;disjunction:no	b1 REF x1 [SEP] b1 greg x1 [SEP] b1 NOT b2 [SEP] b2 REF x2 [SEP] b2 three x2 [SEP] b2 bird x2 [SEP] b2 NOT b3 [SEP] b3 IMP b4 b5 [SEP] b4 REF x3 [SEP] b4 bear x3 [SEP] b5 chase x3 x2 [SEP] b2 clean x1 x2
19	1	two horses that three lions followed loved daniel	exists x1.(two(x1) & horse(x1) & exists x2.(three(x2) & lion(x2) & follow(x2,x1)) & exists x3.(daniel(x3) & love(x1,x3)))	[('two', 1), ('horse', 1), ('three', 1), ('lion', 1), ('follow', 1), ('daniel', 1), ('love', 1)]	TWO AND HORSE THREE LION INV FOLLOW EXIST DANIEL LOVE	[[horse,pos],[lion,pos],[follow,pos],[daniel,pos],[love,pos]]	sbj_quant:yes;obj_quant:no;negation:no;adjective:no;peripheral:no;center:yes;adverb:no;conjunction:no;disjunction:no	b1 REF x1 [SEP] b1 REF x2 [SEP] b1 REF x3 [SEP] b1 two x1 [SEP] b1 horse x1 [SEP] b1 three x2 [SEP] b1 lion x2 [SEP] b1 follow x2 x1 [SEP] b1 daniel x3 [SEP] b1 love x1 x3
20	1	all bears that did not clean two birds did not cry and swim	all x1.((bear(x1) & -exists x2.(two(x2) & bird(x2) & clean(x2,x1))) -> -(cry(x1) & swim(x1)))	[('bear', 0), ('two', 1), ('bird', 1), ('clean', 1), ('cry', 0), ('swim', 0)]	ALL AND BEAR NOT TWO BIRD CLEAN NOT AND CRY SWIM	[[bear,neg],[bird,pos],[clean,pos],[cry,neg],[swim,neg]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:no;peripheral:yes;center:no;adverb:no;conjunction:yes;disjunction:no	b1 IMP b2 b3 [SEP] b2 REF x1 [SEP] b2 bear x1 [SEP] b2 NOT b3 [SEP] b3 REF x2 [SEP] b3 two x2 [SEP] b3 bird x2 [SEP] b3 clean x2 x1 [SEP] b3 NOT b4 [SEP] b4 cry x1 [SEP] b4 swim x1
21	2	all dogs that chased three lions that two foxes accepted cleaned tom	all x1.((dog(x1) & exists x2.(three(x2) & lion(x2) & exists x3.(two(x3) & fox(x3) & accept(x3,x2)) & chase(x2,x1))) -> exists x4.(tom(x4) & clean(x1,x4)))	[('dog', 0), ('three', 0), ('lion', 0), ('two', 0), ('fox', 0), ('accept', 0), ('chase', 0), ('tom', 1), ('clean', 1)]	ALL AND DOG THREE AND LION TWO FOX INV ACCEPT CHASE EXIST TOM CLEAN	[[dog,neg],[lion,neg],[fox,neg],[accept,neg],[chase,neg],[tom,pos],[clean,pos]]	sbj_quant:yes;obj_quant:no;negation:no;adjective:no;peripheral:yes;center:yes;adverb:no;conjunction:no;disjunction:no	b1 IMP b2 b3 [SEP] b2 REF x1 [SEP] b2 REF x2 [SEP] b2 REF x3 [SEP] b2 dog x1 [SEP] b2 three x2 [SEP] b2 lion x2 [SEP] b2 two x3 [SEP] b2 fox x3 [SEP] b2 accept x3 x2 [SEP] b2 chase x2 x1 [SEP] b3 REF x4 [SEP] b3 tom x4 [SEP] b3 clean x1 x4
22	2	two horses that all birds that three dogs accepted kissed swam or ran	exists x1.(two(x1) & horse(x1) & all x2.((bird(x2) & exists x3.(three(x3) & dog(x3) & accept(x3,x2))) -> kiss(x2,x1)) & (swim(x1) | run(x1)))	[('two', 1), ('horse', 1), ('bird', 0), ('three', 0), ('dog', 0), ('accept', 0), ('kiss', 1), ('swim', 1), ('run', 1)]	TWO AND HORSE ALL AND BIRD THREE DOG INV ACCEPT INV KISS OR SWIM RUN	[[horse,pos],[bird,neg],[dog,neg],[accept,neg],[kiss,pos],[swim,pos],[run,pos]]	sbj_quant:yes;obj_quant:no;negation:no;adjective:no;peripheral:no;center:yes;adverb:no;conjunction:no;disjunction:yes	b1 REF x1 [SEP] b1 two x1 [SEP] b1 horse x1 [SEP] b1 IMP b2 b3 [SEP] b2 REF x2 [SEP] b2 REF x3 [SEP] b2 bird x2 [SEP] b2 three x3 [SEP] b2 dog x3 [SEP] b2 accept x3 x2 [SEP] b3 kiss x2 x1 [SEP] b1 DIS b2 b3 [SEP] b2 swim x1 [SEP] b3 run x1
23	2	all dogs that did not follow three bears that rushed slowly cried or swam	all x1.((dog(x1) & -exists x2.(three(x2) & bear(x2) & rush(x2) & slowly(x2) & follow(x2,x1))) -> (cry(x1) | swim(x1)))	[('dog', 0), ('three', 1), ('bear', 1), ('rush', 1), ('slowly', 1), ('follow', 1), ('cry', 1), ('swim', 1)]	ALL AND DOG NOT THREE AND BEAR AND RUSH SLOWLY FOLLOW OR CRY SWIM	[[dog,neg],[bear,pos],[rush,pos],[slowly,pos],[follow,pos],[cry,pos],[swim,pos]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:no;peripheral:yes;center:no;adverb:yes;conjunction:no;disjunction:yes	b1 IMP b2 b3 [SEP] b2 REF x1 [SEP] b2 dog x1 [SEP] b2 NOT b3 [SEP] b3 REF x2 [SEP] b3 three x2 [SEP] b3 bear x2 [SEP] b3 rush x2 [SEP] b3 slowly x2 [SEP] b3 follow x2 x1 [SEP] b3 DIS b4 b5 [SEP] b4 cry x1 [SEP] b5 swim x1
24	2	daniel did not chase three cats that did not lick two tigers that did not accept all foxes	exists x1.(daniel(x1) & -exists x2.(three(x2) & cat(x2) & -exists x3.(two(x3) & tiger(x3) & -all x4.(fox(x4) -> accept(x4,x3)) & lick(x3,x2)) & chase(x1,x2)))	[('daniel', 1), ('three', 0), ('cat', 0), ('two', 1), ('tiger', 1), ('fox', 1), ('accept', 0), ('lick', 1), ('chase', 0)]	EXIST DANIEL NOT THREE AND CAT NOT TWO AND TIGER NOT ALL FOX ACCEPT LICK CHASE	[[daniel,pos],[cat,neg],[tiger,pos],[fox,pos],[accept,neg],[lick,pos],[chase,neg]]	sbj_quant:no;obj_quant:yes;negation:yes;adjective:no;peripheral:yes;center:no;adverb:no;conjunction:no;disjunction:no	b1 REF x1 [SEP] b1 daniel x1 [SEP] b1 NOT b2 [SEP] b2 REF x2 [SEP] b2 three x2 [SEP] b2 cat x2 [SEP] b2 NOT b3 [SEP] b3 REF x3 [SEP] b3 two x3 [SEP] b3 tiger x3 [SEP] b3 NOT b4 [SEP] b4 IMP b5 b6 [SEP] b5 REF x4 [SEP] b5 fox x4 [SEP] b6 accept x4 x3 [SEP] b3 lick x3 x2 [SEP] b2 chase x1 x2
25	2	every horse that did not lick a bear that did not like two small foxes chased ann	all x1.((horse(x1) & -exists x2.(bear(x2) & -exists x3.(two(x3) & fox(x3) & small(x3) & like(x3,x2)) & lick(x2,x1))) -> exists x4.(ann(x4) & chase(x1,x4)))	[('horse', 0), ('bear', 1), ('two', 0), ('fox', 0), ('small', 0), ('like', 0), ('lick', 1), ('ann', 1), ('chase', 1)]	ALL AND HORSE NOT EXIST AND BEAR NOT TWO AND FOX SMALL LIKE LICK EXIST ANN CHASE	[[horse,neg],[bear,pos],[fox,neg],[small,neg],[like,neg],[lick,pos],[ann,pos],[chase,pos]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:yes;peripheral:yes;center:no;adverb:no;conjunction:no;disjunction:no	b1 IMP b2 b3 [SEP] b2 REF x1 [SEP] b2 horse x1 [SEP] b2 NOT b3 [SEP] b3 REF x2 [SEP] b3 bear x2 [SEP] b3 NOT b4 [SEP] b4 REF x3 [SEP] b4 two x3 [SEP] b4 fox x3 [SEP] b4 small x3 [SEP] b4 like x3 x2 [SEP] b3 lick x2 x1 [SEP] b3 REF x4 [SEP] b3 ann x4 [SEP] b3 chase x1 x4
26	2	every monkey that liked three rabbits that cried lazily escaped and moved	all x1.((monkey(x1) & exists x2.(three(x2) & rabbit(x2) & cry(x2) & lazily(x2) & like(x2,x1))) -> (escape(x1) & move(x1)))	[('monkey', 0), ('three', 0), ('rabbit', 0), ('cry', 0), ('lazily', 0), ('like', 0), ('escape', 1), ('move', 1)]	ALL AND MONKEY THREE AND RABBIT AND CRY LAZILY LIKE AND ESCAPE MOVE	[[monkey,neg],[rabbit,neg],[cry,neg],[lazily,neg],[like,neg],[escape,pos],[move,pos]]	sbj_quant:yes;obj_quant:no;negation:no;adjective:no;peripheral:yes;center:no;adverb:yes;conjunction:yes;disjunction:no	b1 IMP b2 b3 [SEP] b2 REF x1 [SEP] b2 REF x2 [SEP] b2 monkey x1 [SEP] b2 three x2 [SEP] b2 rabbit x2 [SEP] b2 cry x2 [SEP] b2 lazily x2 [SEP] b2 like x2 x1 [SEP] b3 escape x1 [SEP] b3 move x1
27	2	a cat that every bird that did not swim lazily accepted did not dance or move	exists x1.(cat(x1) & all x2.((bird(x2) & -(swim(x2) & lazily(x2))) -> accept(x2,x1)) & -(dance(x1) | move(x1)))	[('cat', 1), ('bird', 0), ('swim', 1), ('lazily', 1), ('accept', 1), ('dance', 0), ('move', 0)]	EXIST AND CAT ALL AND BIRD NOT AND SWIM LAZILY INV ACCEPT NOT OR DANCE MOVE	[[cat,pos],[bird,neg],[swim,pos],[lazily,pos],[accept,pos],[dance,neg],[move,neg]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:no;peripheral:no;center:yes;adverb:yes;conjunction:no;disjunction:yes	b1 REF x1 [SEP] b1 cat x1 [SEP] b1 IMP b2 b3 [SEP] b2 REF x2 [SEP] b2 bird x2 [SEP] b2 NOT b3 [SEP] b3 swim x2 [SEP] b3 lazily x2 [SEP] b3 accept x2 x1 [SEP] b1 NOT b2 [SEP] b2 DIS b3 b4 [SEP] b3 dance x1 [SEP] b4 move x1
28	2	two birds that did not accept all dogs that did not kiss three tigers slept slowly	exists x1.(two(x1) & bird(x1) & -all x2.((dog(x2) & -exists x3.(three(x3) & tiger(x3) & kiss(x3,x2))) -> accept(x2,x1)) & sleep(x1) & slowly(x1))	[('two', 1), ('bird', 1), ('dog', 1), ('three', 0), ('tiger', 0), ('kiss', 0), ('accept', 0), ('sleep', 1), ('slowly', 1)]	TWO AND BIRD NOT ALL AND DOG NOT THREE TIGER KISS ACCEPT AND SLEEP SLOWLY	[[bird,pos],[dog,pos],[tiger,neg],[kiss,neg],[accept,neg],[sleep,pos],[slowly,pos]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:no;peripheral:yes;center:no;adverb:yes;conjunction:no;disjunction:no	b1 REF x1 [SEP] b1 two x1 [SEP] b1 bird x1 [SEP] b1 NOT b2 [SEP] b2 IMP b3 b4 [SEP] b3 REF x2 [SEP] b3 dog x2 [SEP] b3 NOT b4 [SEP] b4 REF x3 [SEP] b4 three x3 [SEP] b4 tiger x3 [SEP] b4 kiss x3 x2 [SEP] b4 accept x2 x1 [SEP] b1 sleep x1 [SEP] b1 slowly x1
29	2	a horse that one dog that every polite bear kissed kicked escaped	exists x1.(horse(x1) & exists x2.(dog(x2) & all x3.((bear(x3) & polite(x3)) -> kiss(x3,x2)) & kick(x2,x1)) & escape(x1))	[('horse', 1), ('dog', 1), ('bear', 0), ('polite', 0), ('kiss', 1), ('kick', 1), ('escape', 1)]	EXIST AND HORSE EXIST AND DOG ALL AND BEAR POLITE INV KISS INV KICK ESCAPE	[[horse,pos],[dog,pos],[bear,neg],[polite,neg],[kiss,pos],[kick,pos],[escape,pos]]	sbj_quant:yes;obj_quant:no;negation:no;adjective:yes;peripheral:no;center:yes;adverb:no;conjunction:no;disjunction:no	b1 REF x1 [SEP] b1 REF x2 [SEP] b1 horse x1 [SEP] b1 dog x2 [SEP] b1 IMP b2 b3 [SEP] b2 REF x3 [SEP] b2 bear x3 [SEP] b2 polite x3 [SEP] b3 kiss x3 x2 [SEP] b1 kick x2 x1 [SEP] b1 escape x1
30	2	two horses that three cats that all tigers did not kick did not kiss did not follow tom	exists x1.(two(x1) & horse(x1) & exists x2.(three(x2) & cat(x2) & all x3.(tiger(x3) -> -kick(x3,x2)) & -kiss(x2,x1)) & -exists x4.(tom(x4) & follow(x1,x4)))	[('two', 1), ('horse', 1), ('three', 1), ('cat', 1), ('tiger', 0), ('kick', 0), ('kiss', 0), ('tom', 0), ('follow', 0)]	TWO AND HORSE THREE AND CAT ALL TIGER NOT INV KICK NOT INV KISS NOT EXIST TOM FOLLOW	[[horse,pos],[cat,pos],[tiger,neg],[kick,neg],[kiss,neg],[tom,neg],[follow,neg]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:no;peripheral:no;center:yes;adverb:no;conjunction:no;disjunction:no	b1 REF x1 [SEP] b1 REF x2 [SEP] b1 two x1 [SEP] b1 horse x1 [SEP] b1 three x2 [SEP] b1 cat x2 [SEP] b1 IMP b2 b3 [SEP] b2 REF x3 [SEP] b2 tiger x3 [SEP] b3 NOT b4 [SEP] b4 kick x3 x2 [SEP] b1 NOT b2 [SEP] b2 kiss x2 x1 [SEP] b1 NOT b2 [SEP] b2 REF x4 [SEP] b2 tom x4 [SEP] b2 follow x1 x4
31	3	one bird that a bear that every rabbit that kicked every monkey did not love did not touch swam	exists x1.(bird(x1) & exists x2.(bear(x2) & all x3.((rabbit(x3) & all x4.(monkey(x4) -> kick(x4,x3))) -> -love(x3,x2)) & -touch(x2,x1)) & swim(x1))	[('bird', 1), ('bear', 1), ('rabbit', 0), ('monkey', 1), ('kick', 0), ('love', 0), ('touch', 0), ('swim', 1)]	EXIST AND BIRD EXIST AND BEAR ALL AND RABBIT ALL MONKEY KICK NOT INV LOVE NOT INV TOUCH SWIM	[[bird,pos],[bear,pos],[rabbit,neg],[monkey,pos],[kick,neg],[love,neg],[touch,neg],[swim,pos]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:no;peripheral:yes;center:yes;adverb:no;conjunction:no;disjunction:no	b1 REF x1 [SEP] b1 REF x2 [SEP] b1 bird x1 [SEP] b1 bear x2 [SEP] b1 IMP b2 b3 [SEP] b2 REF x3 [SEP] b2 rabbit x3 [SEP] b2 IMP b3 b4 [SEP] b3 REF x4 [SEP] b3 monkey x4 [SEP] b4 kick x4 x3 [SEP] b3 NOT b4 [SEP] b4 love x3 x2 [SEP] b1 NOT b2 [SEP] b2 touch x2 x1 [SEP] b1 swim x1
32	3	greg did not follow all rabbits that kicked three foxes that did not kick all lions that did not run	exists x1.(greg(x1) & -all x2.((rabbit(x2) & exists x3.(three(x3) & fox(x3) & -all x4.((lion(x4) & -run(x4)) -> kick(x4,x3)) & kick(x3,x2))) -> follow(x1,x2)))	[('greg', 1), ('rabbit', 1), ('three', 1), ('fox', 1), ('lion', 1), ('run', 0), ('kick', 0), ('kick', 1), ('follow', 0)]	EXIST GREG NOT ALL AND RABBIT THREE AND FOX NOT ALL AND LION NOT RUN KICK KICK FOLLOW	[[greg,pos],[rabbit,pos],[fox,pos],[lion,pos],[run,neg],[kick,neg],[kick,pos],[follow,neg]]	sbj_quant:no;obj_quant:yes;negation:yes;adjective:no;peripheral:yes;center:no;adverb:no;conjunction:no;disjunction:no	b1 REF x1 [SEP] b1 greg x1 [SEP] b1 NOT b2 [SEP] b2 IMP b3 b4 [SEP] b3 REF x2 [SEP] b3 REF x3 [SEP] b3 rabbit x2 [SEP] b3 three x3 [SEP] b3 fox x3 [SEP] b3 NOT b4 [SEP] b4 IMP b5 b6 [SEP] b5 REF x4 [SEP] b5 lion x4 [SEP] b5 NOT b6 [SEP] b6 run x4 [SEP] b6 kick x4 x3 [SEP] b3 kick x3 x2 [SEP] b4 follow x1 x2
33	3	three foxes that three horses that did not like all birds that all small lions accepted did not chase escaped and slept	exists x1.(three(x1) & fox(x1) & exists x2.(three(x2) & horse(x2) & -all x3.((bird(x3) & all x4.((lion(x4) & small(x4)) -> accept(x4,x3))) -> like(x3,x2)) & -chase(x2,x1)) & escape(x1) & sleep(x1))	[('three', 1), ('fox', 1), ('three', 1), ('horse', 1), ('bird', 1), ('lion', 0), ('small', 0), ('accept', 1), ('like', 0), ('chase', 0), ('escape', 1), ('sleep', 1)]	THREE AND FOX THREE AND HORSE NOT ALL AND BIRD ALL AND LION SMALL INV ACCEPT LIKE NOT INV CHASE AND ESCAPE SLEEP	[[fox,pos],[horse,pos],[bird,pos],[lion,neg],[small,neg],[accept,pos],[like,neg],[chase,neg],[escape,pos],[sleep,pos]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:yes;peripheral:yes;center:yes;adverb:no;conjunction:yes;disjunction:no	b1 REF x1 [SEP] b1 REF x2 [SEP] b1 three x1 [SEP] b1 fox x1 [SEP] b1 three x2 [SEP] b1 horse x2 [SEP] b1 NOT b2 [SEP] b2 IMP b3 b4 [SEP] b3 REF x3 [SEP] b3 bird x3 [SEP] b3 IMP b4 b5 [SEP] b4 REF x4 [SEP] b4 lion x4 [SEP] b4 small x4 [SEP] b5 accept x4 x3 [SEP] b4 like x3 x2 [SEP] b1 NOT b2 [SEP] b2 chase x2 x1 [SEP] b1 escape x1 [SEP] b1 sleep x1
34	3	ann did not touch a fox that did not love a bird that did not chase three cats that a small lion did not accept	exists x1.(ann(x1) & -exists x2.(fox(x2) & -exists x3.(bird(x3) & -exists x4.(three(x4) & cat(x4) & exists x5.(lion(x5) & small(x5) & -accept(x5,x4)) & chase(x4,x3)) & love(x3,x2)) & touch(x1,x2)))	[('ann', 1), ('fox', 0), ('bird', 1), ('three', 0), ('cat', 0), ('lion', 0), ('small', 0), ('accept', 1), ('chase', 0), ('love', 1), ('touch', 0)]	EXIST ANN NOT EXIST AND FOX NOT EXIST AND BIRD NOT THREE AND CAT EXIST AND LION SMALL NOT INV ACCEPT CHASE LOVE TOUCH	[[ann,pos],[fox,neg],[bird,pos],[cat,neg],[lion,neg],[small,neg],[accept,pos],[chase,neg],[love,pos],[touch,neg]]	sbj_quant:no;obj_quant:yes;negation:yes;adjective:yes;peripheral:yes;center:yes;adverb:no;conjunction:no;disjunction:no	b1 REF x1 [SEP] b1 ann x1 [SEP] b1 NOT b2 [SEP] b2 REF x2 [SEP] b2 fox x2 [SEP] b2 NOT b3 [SEP] b3 REF x3 [SEP] b3 bird x3 [SEP] b3 NOT b4 [SEP] b4 REF x4 [SEP] b4 REF x5 [SEP] b4 three x4 [SEP] b4 cat x4 [SEP] b4 lion x5 [SEP] b4 small x5 [SEP] b4 NOT b5 [SEP] b5 accept x5 x4 [SEP] b4 chase x4 x3 [SEP] b3 love x3 x2 [SEP] b2 touch x1 x2
35	3	every rabbit that did not lick two birds that one bird that did not clean a wild dog did not chase did not come or walk	all x1.((rabbit(x1) & -exists x2.(two(x2) & bird(x2) & exists x3.(bird(x3) & -exists x4.(dog(x4) & wild(x4) & clean(x4,x3)) & -chase(x3,x2)) & lick(x2,x1))) -> -(come(x1) | walk(x1)))	[('rabbit', 0), ('two', 1), ('bird', 1), ('bird', 1), ('dog', 0), ('wild', 0), ('clean', 0), ('chase', 0), ('lick', 1), ('come', 0), ('walk', 0)]	ALL AND RABBIT NOT TWO AND BIRD EXIST AND BIRD NOT EXIST AND DOG WILD CLEAN NOT INV CHASE LICK NOT OR COME WALK	[[rabbit,neg],[bird,pos],[bird,pos],[dog,neg],[wild,neg],[clean,neg],[chase,neg],[lick,pos],[come,neg],[walk,neg]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:yes;peripheral:yes;center:yes;adverb:no;conjunction:no;disjunction:yes	b1 IMP b2 b3 [SEP] b2 REF x1 [SEP] b2 rabbit x1 [SEP] b2 NOT b3 [SEP] b3 REF x2 [SEP] b3 REF x3 [SEP] b3 two x2 [SEP] b3 bird x2 [SEP] b3 bird x3 [SEP] b3 NOT b4 [SEP] b4 REF x4 [SEP] b4 dog x4 [SEP] b4 wild x4 [SEP] b4 clean x4 x3 [SEP] b3 NOT b4 [SEP] b4 chase x3 x2 [SEP] b3 lick x2 x1 [SEP] b3 NOT b4 [SEP] b4 DIS b5 b6 [SEP] b5 come x1 [SEP] b6 walk x1
36	3	one dog that accepted one monkey that one cat that did not cry quickly touched did not lick elliot	exists x1.(dog(x1) & exists x2.(monkey(x2) & exists x3.(cat(x3) & -(cry(x3) & quickly(x3)) & touch(x3,x2)) & accept(x2,x1)) & -exists x4.(elliot(x4) & lick(x1,x4)))	[('dog', 1), ('monkey', 1), ('cat', 1), ('cry', 0), ('quickly', 0), ('touch', 1), ('accept', 1), ('elliot', 0), ('lick', 0)]	EXIST AND DOG EXIST AND MONKEY EXIST AND CAT NOT AND CRY QUICKLY INV TOUCH ACCEPT NOT EXIST ELLIOT LICK	[[dog,pos],[monkey,pos],[cat,pos],[cry,neg],[quickly,neg],[touch,pos],[accept,pos],[elliot,neg],[lick,neg]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:no;peripheral:yes;center:yes;adverb:yes;conjunction:no;disjunction:no	b1 REF x1 [SEP] b1 REF x2 [SEP] b1 REF x3 [SEP] b1 dog x1 [SEP] b1 monkey x2 [SEP] b1 cat x3 [SEP] b1 NOT b2 [SEP] b2 cry x3 [SEP] b2 quickly x3 [SEP] b1 touch x3 x2 [SEP] b1 accept x2 x1 [SEP] b1 NOT b2 [SEP] b2 REF x4 [SEP] b2 elliot x4 [SEP] b2 lick x1 x4
37	3	elliot kicked every bear that a fox that followed every horse that did not lick a tiger touched	exists x1.(elliot(x1) & all x2.((bear(x2) & exists x3.(fox(x3) & all x4.((horse(x4) & -exists x5.(tiger(x5) & lick(x5,x4))) -> follow(x4,x3)) & touch(x3,x2))) -> kick(x1,x2)))	[('elliot', 1), ('bear', 0), ('fox', 0), ('horse', 1), ('tiger', 0), ('lick', 0), ('follow', 0), ('touch', 0), ('kick', 1)]	EXIST ELLIOT ALL AND BEAR EXIST AND FOX ALL AND HORSE NOT EXIST TIGER LICK FOLLOW INV TOUCH KICK	[[elliot,pos],[bear,neg],[fox,neg],[horse,pos],[tiger,neg],[lick,neg],[follow,neg],[touch,neg],[kick,pos]]	sbj_quant:no;obj_quant:yes;negation:yes;adjective:no;peripheral:yes;center:yes;adverb:no;conjunction:no;disjunction:no	b1 REF x1 [SEP] b1 elliot x1 [SEP] b1 IMP b2 b3 [SEP] b2 REF x2 [SEP] b2 REF x3 [SEP] b2 bear x2 [SEP] b2 fox x3 [SEP] b2 IMP b3 b4 [SEP] b3 REF x4 [SEP] b3 horse x4 [SEP] b3 NOT b4 [SEP] b4 REF x5 [SEP] b4 tiger x5 [SEP] b4 lick x5 x4 [SEP] b4 follow x4 x3 [SEP] b2 touch x3 x2 [SEP] b3 kick x1 x2
38	3	greg did not like all cats that three monkeys that kissed three horses that did not lick all foxes did not kiss	exists x1.(greg(x1) & -all x2.((cat(x2) & exists x3.(three(x3) & monkey(x3) & exists x4.(three(x4) & horse(x4) & -all x5.(fox(x5) -> lick(x5,x4)) & kiss(x4,x3)) & -kiss(x3,x2))) -> like(x1,x2)))	[('greg', 1), ('cat', 1), ('three', 1), ('monkey', 1), ('three', 1), ('horse', 1), ('fox', 1), ('lick', 0), ('kiss', 1), ('kiss', 0), ('like', 0)]	EXIST GREG NOT ALL AND CAT THREE AND MONKEY THREE AND HORSE NOT ALL FOX LICK KISS NOT INV KISS LIKE	[[greg,pos],[cat,pos],[monkey,pos],[horse,pos],[fox,pos],[lick,neg],[kiss,pos],[kiss,neg],[like,neg]]	sbj_quant:no;obj_quant:yes;negation:yes;adjective:no;peripheral:yes;center:yes;adverb:no;conjunction:no;disjunction:no	b1 REF x1 [SEP] b1 greg x1 [SEP] b1 NOT b2 [SEP] b2 IMP b3 b4 [SEP] b3 REF x2 [SEP] b3 REF x3 [SEP] b3 REF x4 [SEP] b3 cat x2 [SEP] b3 three x3 [SEP] b3 monkey x3 [SEP] b3 three x4 [SEP] b3 horse x4 [SEP] b3 NOT b4 [SEP] b4 IMP b5 b6 [SEP] b5 REF x5 [SEP] b5 fox x5 [SEP] b6 lick x5 x4 [SEP] b3 kiss x4 x3 [SEP] b3 NOT b4 [SEP] b4 kiss x3 x2 [SEP] b4 like x1 x2
39	3	two foxes that two monkeys that one lion that three small rabbits cleaned kissed did not like did not love greg	exists x1.(two(x1) & fox(x1) & exists x2.(two(x2) & monkey(x2) & exists x3.(lion(x3) & exists x4.(three(x4) & rabbit(x4) & small(x4) & clean(x4,x3)) & kiss(x3,x2)) & -like(x2,x1)) & -exists x5.(greg(x5) & love(x1,x5)))	[('two', 1), ('fox', 1), ('two', 1), ('monkey', 1), ('lion', 1), ('three', 1), ('rabbit', 1), ('small', 1), ('clean', 1), ('kiss', 1), ('like', 0), ('greg', 0), ('love', 0)]	TWO AND FOX TWO AND MONKEY EXIST AND LION THREE AND RABBIT SMALL INV CLEAN INV KISS NOT INV LIKE NOT EXIST GREG LOVE	[[fox,pos],[monkey,pos],[lion,pos],[rabbit,pos],[small,pos],[clean,pos],[kiss,pos],[like,neg],[greg,neg],[love,neg]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:yes;peripheral:no;center:yes;adverb:no;conjunction:no;disjunction:no	b1 REF x1 [SEP] b1 REF x2 [SEP] b1 REF x3 [SEP] b1 REF x4 [SEP] b1 two x1 [SEP] b1 fox x1 [SEP] b1 two x2 [SEP] b1 monkey x2 [SEP] b1 lion x3 [SEP] b1 three x4 [SEP] b1 rabbit x4 [SEP] b1 small x4 [SEP] b1 clean x4 x3 [SEP] b1 kiss x3 x2 [SEP] b1 NOT b2 [SEP] b2 like x2 x1 [SEP] b1 NOT b2 [SEP] b2 REF x5 [SEP] b2 greg x5 [SEP] b2 love x1 x5
40	3	one horse that every bird that licked every monkey that a wild rabbit followed liked did not cry quickly	exists x1.(horse(x1) & all x2.((bird(x2) & all x3.((monkey(x3) & exists x4.(rabbit(x4) & wild(x4) & follow(x4,x3))) -> lick(x3,x2))) -> like(x2,x1)) & -(cry(x1) & quickly(x1)))	[('horse', 1), ('bird', 0), ('monkey', 1), ('rabbit', 1), ('wild', 1), ('follow', 1), ('lick', 0), ('like', 1), ('cry', 0), ('quickly', 0)]	EXIST AND HORSE ALL AND BIRD ALL AND MONKEY EXIST AND RABBIT WILD INV FOLLOW LICK INV LIKE NOT AND CRY QUICKLY	[[horse,pos],[bird,neg],[monkey,pos],[rabbit,pos],[wild,pos],[follow,pos],[lick,neg],[like,pos],[cry,neg],[quickly,neg]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:yes;peripheral:yes;center:yes;adverb:yes;conjunction:no;disjunction:no	b1 REF x1 [SEP] b1 horse x1 [SEP] b1 IMP b2 b3 [SEP] b2 REF x2 [SEP] b2 bird x2 [SEP] b2 IMP b3 b4 [SEP] b3 REF x3 [SEP] b3 REF x4 [SEP] b3 monkey x3 [SEP] b3 rabbit x4 [SEP] b3 wild x4 [SEP] b3 follow x4 x3 [SEP] b4 lick x3 x2 [SEP] b3 like x2 x1 [SEP] b1 NOT b2 [SEP] b2 cry x1 [SEP] b2 quickly x1
41	4	every fox that accepted a bear that one dog that one monkey that a cat did not clean did not touch did not kick did not come	all x1.((fox(x1) & exists x2.(bear(x2) & exists x3.(dog(x3) & exists x4.(monkey(x4) & exists x5.(cat(x5) & -clean(x5,x4)) & -touch(x4,x3)) & -kick(x3,x2)) & accept(x2,x1))) -> -come(x1))	[('fox', 0), ('bear', 0), ('dog', 0), ('monkey', 0), ('cat', 0), ('clean', 1), ('touch', 1), ('kick', 1), ('accept', 0), ('come', 0)]	ALL AND FOX EXIST AND BEAR EXIST AND DOG EXIST AND MONKEY EXIST CAT NOT INV CLEAN NOT INV TOUCH NOT INV KICK ACCEPT NOT COME	[[fox,neg],[bear,neg],[dog,neg],[monkey,neg],[cat,neg],[clean,pos],[touch,pos],[kick,pos],[accept,neg],[come,neg]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:no;peripheral:yes;center:yes;adverb:no;conjunction:no;disjunction:no	b1 IMP b2 b3 [SEP] b2 REF x1 [SEP] b2 REF x2 [SEP] b2 REF x3 [SEP] b2 REF x4 [SEP] b2 REF x5 [SEP] b2 fox x1 [SEP] b2 bear x2 [SEP] b2 dog x3 [SEP] b2 monkey x4 [SEP] b2 cat x5 [SEP] b2 NOT b3 [SEP] b3 clean x5 x4 [SEP] b2 NOT b3 [SEP] b3 touch x4 x3 [SEP] b2 NOT b3 [SEP] b3 kick x3 x2 [SEP] b2 accept x2 x1 [SEP] b3 NOT b4 [SEP] b4 come x1
42	4	john did not like three birds that did not kiss all lions that did not lick all rabbits that did not kick two bears that liked all crazy tigers	exists x1.(john(x1) & -exists x2.(three(x2) & bird(x2) & -all x3.((lion(x3) & -all x4.((rabbit(x4) & -exists x5.(two(x5) & bear(x5) & all x6.((tiger(x6) & crazy(x6)) -> like(x6,x5)) & kick(x5,x4))) -> lick(x4,x3))) -> kiss(x3,x2)) & like(x1,x2)))	[('john', 1), ('three', 0), ('bird', 0), ('lion', 0), ('rabbit', 0), ('two', 1), ('bear', 1), ('tiger', 0), ('crazy', 0), ('like', 1), ('kick', 1), ('lick', 1), ('kiss', 1), ('like', 0)]	EXIST JOHN NOT THREE AND BIRD NOT ALL AND LION NOT ALL AND RABBIT NOT TWO AND BEAR ALL AND TIGER CRAZY LIKE KICK LICK KISS LIKE	[[john,pos],[bird,neg],[lion,neg],[rabbit,neg],[bear,pos],[tiger,neg],[crazy,neg],[like,pos],[kick,pos],[lick,pos],[kiss,pos],[like,neg]]	sbj_quant:no;obj_quant:yes;negation:yes;adjective:yes;peripheral:yes;center:no;adverb:no;conjunction:no;disjunction:no	b1 REF x1 [SEP] b1 john x1 [SEP] b1 NOT b2 [SEP] b2 REF x2 [SEP] b2 three x2 [SEP] b2 bird x2 [SEP] b2 NOT b3 [SEP] b3 IMP b4 b5 [SEP] b4 REF x3 [SEP] b4 lion x3 [SEP] b4 NOT b5 [SEP] b5 IMP b6 b7 [SEP] b6 REF x4 [SEP] b6 rabbit x4 [SEP] b6 NOT b7 [SEP] b7 REF x5 [SEP] b7 two x5 [SEP] b7 bear x5 [SEP] b7 IMP b8 b9 [SEP] b8 REF x6 [SEP] b8 tiger x6 [SEP] b8 crazy x6 [SEP] b9 like x6 x5 [SEP] b7 kick x5 x4 [SEP] b7 lick x4 x3 [SEP] b5 kiss x3 x2 [SEP] b2 like x1 x2
43	4	one horse that a bird that one fox that did not clean every rabbit that every large tiger did not follow did not love followed did not escape	exists x1.(horse(x1) & exists x2.(bird(x2) & exists x3.(fox(x3) & -all x4.((rabbit(x4) & all x5.((tiger(x5) & large(x5)) -> -follow(x5,x4))) -> clean(x4,x3)) & -love(x3,x2)) & follow(x2,x1)) & -escape(x1))	[('horse', 1), ('bird', 1), ('fox', 1), ('rabbit', 1), ('tiger', 0), ('large', 0), ('follow', 0), ('clean', 0), ('love', 0), ('follow', 1), ('escape', 0)]	EXIST AND HORSE EXIST AND BIRD EXIST AND FOX NOT ALL AND RABBIT ALL AND TIGER LARGE NOT INV FOLLOW CLEAN NOT INV LOVE INV FOLLOW NOT ESCAPE	[[horse,pos],[bird,pos],[fox,pos],[rabbit,pos],[tiger,neg],[large,neg],[follow,neg],[clean,neg],[love,neg],[follow,pos],[escape,neg]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:yes;peripheral:yes;center:yes;adverb:no;conjunction:no;disjunction:no	b1 REF x1 [SEP] b1 REF x2 [SEP] b1 REF x3 [SEP] b1 horse x1 [SEP] b1 bird x2 [SEP] b1 fox x3 [SEP] b1 NOT b2 [SEP] b2 IMP b3 b4 [SEP] b3 REF x4 [SEP] b3 rabbit x4 [SEP] b3 IMP b4 b5 [SEP] b4 REF x5 [SEP] b4 tiger x5 [SEP] b4 large x5 [SEP] b5 NOT b6 [SEP] b6 follow x5 x4 [SEP] b4 clean x4 x3 [SEP] b1 NOT b2 [SEP] b2 love x3 x2 [SEP] b1 follow x2 x1 [SEP] b1 NOT b2 [SEP] b2 escape x1
44	4	bob accepted a fox that one rabbit that kicked every tiger that did not clean one cat that a horse licked followed	exists x1.(bob(x1) & exists x2.(fox(x2) & exists x3.(rabbit(x3) & all x4.((tiger(x4) & -exists x5.(cat(x5) & exists x6.(horse(x6) & lick(x6,x5)) & clean(x5,x4))) -> kick(x4,x3)) & follow(x3,x2)) & accept(x1,x2)))	[('bob', 1), ('fox', 1), ('rabbit', 1), ('tiger', 0), ('cat', 1), ('horse', 1), ('lick', 1), ('clean', 1), ('kick', 1), ('follow', 1), ('accept', 1)]	EXIST BOB EXIST AND FOX EXIST AND RABBIT ALL AND TIGER NOT EXIST AND CAT EXIST HORSE INV LICK CLEAN KICK INV FOLLOW ACCEPT	[[bob,pos],[fox,pos],[rabbit,pos],[tiger,neg],[cat,pos],[horse,pos],[lick,pos],[clean,pos],[kick,pos],[follow,pos],[accept,pos]]	sbj_quant:no;obj_quant:yes;negation:yes;adjective:no;peripheral:yes;center:yes;adverb:no;conjunction:no;disjunction:no	b1 REF x1 [SEP] b1 REF x2 [SEP] b1 REF x3 [SEP] b1 bob x1 [SEP] b1 fox x2 [SEP] b1 rabbit x3 [SEP] b1 IMP b2 b3 [SEP] b2 REF x4 [SEP] b2 tiger x4 [SEP] b2 NOT b3 [SEP] b3 REF x5 [SEP] b3 REF x6 [SEP] b3 cat x5 [SEP] b3 horse x6 [SEP] b3 lick x6 x5 [SEP] b3 clean x5 x4 [SEP] b3 kick x4 x3 [SEP] b1 follow x3 x2 [SEP] b1 accept x1 x2
45	4	one lion that chased every monkey that kicked every fox that every rabbit that every crazy bird touched did not clean did not swim	exists x1.(lion(x1) & all x2.((monkey(x2) & all x3.((fox(x3) & all x4.((rabbit(x4) & all x5.((bird(x5) & crazy(x5)) -> touch(x5,x4))) -> -clean(x4,x3))) -> kick(x3,x2))) -> chase(x2,x1)) & -swim(x1))	[('lion', 1), ('monkey', 0), ('fox', 1), ('rabbit', 0), ('bird', 1), ('crazy', 1), ('touch', 0), ('clean', 0), ('kick', 0), ('chase', 1), ('swim', 0)]	EXIST AND LION ALL AND MONKEY ALL AND FOX ALL AND RABBIT ALL AND BIRD CRAZY INV TOUCH NOT INV CLEAN KICK CHASE NOT SWIM	[[lion,pos],[monkey,neg],[fox,pos],[rabbit,neg],[bird,pos],[crazy,pos],[touch,neg],[clean,neg],[kick,neg],[chase,pos],[swim,neg]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:yes;peripheral:yes;center:yes;adverb:no;conjunction:no;disjunction:no	b1 REF x1 [SEP] b1 lion x1 [SEP] b1 IMP b2 b3 [SEP] b2 REF x2 [SEP] b2 monkey x2 [SEP] b2 IMP b3 b4 [SEP] b3 REF x3 [SEP] b3 fox x3 [SEP] b3 IMP b4 b5 [SEP] b4 REF x4 [SEP] b4 rabbit x4 [SEP] b4 IMP b5 b6 [SEP] b5 REF x5 [SEP] b5 bird x5 [SEP] b5 crazy x5 [SEP] b6 touch x5 x4 [SEP] b5 NOT b6 [SEP] b6 clean x4 x3 [SEP] b4 kick x3 x2 [SEP] b3 chase x2 x1 [SEP] b1 NOT b2 [SEP] b2 swim x1
46	4	two lions that did not kiss a bear that accepted all dogs that did not like three cats that cried lazily did not run seriously	exists x1.(two(x1) & lion(x1) & -exists x2.(bear(x2) & all x3.((dog(x3) & -exists x4.(three(x4) & cat(x4) & cry(x4) & lazily(x4) & like(x4,x3))) -> accept(x3,x2)) & kiss(x2,x1)) & -(run(x1) & seriously(x1)))	[('two', 1), ('lion', 1), ('bear', 0), ('dog', 1), ('three', 0), ('cat', 0), ('cry', 0), ('lazily', 0), ('like', 0), ('accept', 0), ('kiss', 0), ('run', 0), ('seriously', 0)]	TWO AND LION NOT EXIST AND BEAR ALL AND DOG NOT THREE AND CAT AND CRY LAZILY LIKE ACCEPT KISS NOT AND RUN SERIOUSLY	[[lion,pos],[bear,neg],[dog,pos],[cat,neg],[cry,neg],[lazily,neg],[like,neg],[accept,neg],[kiss,neg],[run,neg],[seriously,neg]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:no;peripheral:yes;center:no;adverb:yes;conjunction:no;disjunction:no	b1 REF x1 [SEP] b1 two x1 [SEP] b1 lion x1 [SEP] b1 NOT b2 [SEP] b2 REF x2 [SEP] b2 bear x2 [SEP] b2 IMP b3 b4 [SEP] b3 REF x3 [SEP] b3 dog x3 [SEP] b3 NOT b4 [SEP] b4 REF x4 [SEP] b4 three x4 [SEP] b4 cat x4 [SEP] b4 cry x4 [SEP] b4 lazily x4 [SEP] b4 like x4 x3 [SEP] b4 accept x3 x2 [SEP] b2 kiss x2 x1 [SEP] b1 NOT b2 [SEP] b2 run x1 [SEP] b2 seriously x1
47	4	a bird that liked every tiger that one fox that a horse that a bear did not lick did not follow did not kiss did not escape	exists x1.(bird(x1) & all x2.((tiger(x2) & exists x3.(fox(x3) & exists x4.(horse(x4) & exists x5.(bear(x5) & -lick(x5,x4)) & -follow(x4,x3)) & -kiss(x3,x2))) -> like(x2,x1)) & -escape(x1))	[('bird', 1), ('tiger', 0), ('fox', 0), ('horse', 0), ('bear', 0), ('lick', 1), ('follow', 1), ('kiss', 1), ('like', 1), ('escape', 0)]	EXIST AND BIRD ALL AND TIGER EXIST AND FOX EXIST AND HORSE EXIST BEAR NOT INV LICK NOT INV FOLLOW NOT INV KISS LIKE NOT ESCAPE	[[bird,pos],[tiger,neg],[fox,neg],[horse,neg],[bear,neg],[lick,pos],[follow,pos],[kiss,pos],[like,pos],[escape,neg]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:no;peripheral:yes;center:yes;adverb:no;conjunction:no;disjunction:no	b1 REF x1 [SEP] b1 bird x1 [SEP] b1 IMP b2 b3 [SEP] b2 REF x2 [SEP] b2 REF x3 [SEP] b2 REF x4 [SEP] b2 REF x5 [SEP] b2 tiger x2 [SEP] b2 fox x3 [SEP] b2 horse x4 [SEP] b2 bear x5 [SEP] b2 NOT b3 [SEP] b3 lick x5 x4 [SEP] b2 NOT b3 [SEP] b3 follow x4 x3 [SEP] b2 NOT b3 [SEP] b3 kiss x3 x2 [SEP] b3 like x2 x1 [SEP] b1 NOT b2 [SEP] b2 escape x1
48	4	elliot accepted one monkey that every fox that touched one lion that did not accept one tiger that every dog loved liked	exists x1.(elliot(x1) & exists x2.(monkey(x2) & all x3.((fox(x3) & exists x4.(lion(x4) & -exists x5.(tiger(x5) & all x6.(dog(x6) -> love(x6,x5)) & accept(x5,x4)) & touch(x4,x3))) -> like(x3,x2)) & accept(x1,x2)))	[('elliot', 1), ('monkey', 1), ('fox', 0), ('lion', 0), ('tiger', 1), ('dog', 0), ('love', 1), ('accept', 1), ('touch', 0), ('like', 1), ('accept', 1)]	EXIST ELLIOT EXIST AND MONKEY ALL AND FOX EXIST AND LION NOT EXIST AND TIGER ALL DOG INV LOVE ACCEPT TOUCH INV LIKE ACCEPT	[[elliot,pos],[monkey,pos],[fox,neg],[lion,neg],[tiger,pos],[dog,neg],[love,pos],[accept,pos],[touch,neg],[like,pos],[accept,pos]]	sbj_quant:no;obj_quant:yes;negation:yes;adjective:no;peripheral:yes;center:yes;adverb:no;conjunction:no;disjunction:no	b1 REF x1 [SEP] b1 REF x2 [SEP] b1 elliot x1 [SEP] b1 monkey x2 [SEP] b1 IMP b2 b3 [SEP] b2 REF x3 [SEP] b2 REF x4 [SEP] b2 fox x3 [SEP] b2 lion x4 [SEP] b2 NOT b3 [SEP] b3 REF x5 [SEP] b3 tiger x5 [SEP] b3 IMP b4 b5 [SEP] b4 REF x6 [SEP] b4 dog x6 [SEP] b5 love x6 x5 [SEP] b3 accept x5 x4 [SEP] b2 touch x4 x3 [SEP] b3 like x3 x2 [SEP] b1 accept x1 x2
49	4	a monkey that two bears that three monkeys that all rabbits that liked two polite lions accepted touched kicked did not rush and come	exists x1.(monkey(x1) & exists x2.(two(x2) & bear(x2) & exists x3.(three(x3) & monkey(x3) & all x4.((rabbit(x4) & exists x5.(two(x5) & lion(x5) & polite(x5) & like(x5,x4))) -> accept(x4,x3)) & touch(x3,x2)) & kick(x2,x1)) & -(rush(x1) & come(x1)))	[('monkey', 1), ('two', 1), ('bear', 1), ('three', 1), ('monkey', 1), ('rabbit', 0), ('two', 0), ('lion', 0), ('polite', 0), ('like', 0), ('accept', 1), ('touch', 1), ('kick', 1), ('rush', 0), ('come', 0)]	EXIST AND MONKEY TWO AND BEAR THREE AND MONKEY ALL AND RABBIT TWO AND LION POLITE LIKE INV ACCEPT INV TOUCH INV KICK NOT AND RUSH COME	[[monkey,pos],[bear,pos],[monkey,pos],[rabbit,neg],[lion,neg],[polite,neg],[like,neg],[accept,pos],[touch,pos],[kick,pos],[rush,neg],[come,neg]]	sbj_quant:yes;obj_quant:no;negation:yes;adjective:yes;peripheral:yes;center:yes;adverb:no;conjunction:yes;disjunction:no	b1 REF x1 [SEP] b1 REF x2 [SEP] b1 REF x3 [SEP] b1 monkey x1 [SEP] b1 two x2 [SEP] b1 bear x2 [SEP] b1 three x3 [SEP] b1 monkey x3 [SEP] b1 IMP b2 b3 [SEP] b2 REF x4 [SEP] b2 REF x5 [SEP] b2 rabbit x4 [SEP] b2 two x5 [SEP] b2 lion x5 [SEP] b2 polite x5 [SEP] b2 like x5 x4 [SEP] b3 accept x4 x3 [SEP] b1 touch x3 x2 [SEP] b1 kick x2 x1 [SEP] b1 NOT b2 [SEP] b2 rush x1 [SEP] b2 come x1
50	4	every monkey that a lion that a cat that every dog that one small rabbit followed accepted liked touched kissed tom	all x1.((monkey(x1) & exists x2.(lion(x2) & exists x3.(cat(x3) & all x4.((dog(x4) & exists x5.(rabbit(x5) & small(x5) & follow(x5,x4))) -> accept(x4,x3)) & like(x3,x2)) & touch(x2,x1))) -> exists x6.(tom(x6) & kiss(x1,x6)))	[('monkey', 0), ('lion', 0), ('cat', 0), ('dog', 1), ('rabbit', 1), ('small', 1), ('follow', 1), ('accept', 0), ('like', 0), ('touch', 0), ('tom', 1), ('kiss', 1)]	ALL AND MONKEY EXIST AND LION EXIST AND CAT ALL AND DOG EXIST AND RABBIT SMALL INV FOLLOW INV ACCEPT INV LIKE INV TOUCH EXIST TOM KISS	[[monkey,neg],[lion,neg],[cat,neg],[dog,pos],[rabbit,pos],[small,pos],[follow,pos],[accept,neg],[like,neg],[touch,neg],[tom,pos],[kiss,pos]]	sbj_quant:yes;obj_quant:no;negation:no;adjective:yes;peripheral:no;center:yes;adverb:no;conjunction:no;disjunction:no	b1 IMP b2 b3 [SEP] b2 REF x1 [SEP] b2 REF x2 [SEP] b2 REF x3 [SEP] b2 monkey x1 [SEP] b2 lion x2 [SEP] b2 cat x3 [SEP] b2 IMP b3 b4 [SEP] b3 REF x4 [SEP] b3 REF x5 [SEP] b3 dog x4 [SEP] b3 rabbit x5 [SEP] b3 small x5 [SEP] b3 follow x5 x4 [SEP] b4 accept x4 x3 [SEP] b2 like x3 x2 [SEP] b2 touch x2 x1 [SEP] b3 REF x6 [SEP] b3 tom x6 [SEP] b3 kiss x1 x6
